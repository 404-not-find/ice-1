VERSION := $(shell git describe --tags | sed -e 's/^v//g' | awk -F "-" '{print $$1}')
ITERATION := $(shell git describe --tags --long | awk -F "-" '{print $$2}')
GO_VERSION=$(shell gobuild -v)
GO := $(or $(GOROOT),/usr/lib/go)/bin/go
PROCS := $(shell nproc)
cores:
	@echo "cores: $(PROCS)"
test:
	go test -v
bench:
	go test -bench .
bench-record:
	$(GO) test -bench . > "benchmarks/stun-go-$(GO_VERSION).txt"
fuzz-prepare-candidate:
	go-fuzz-build -func FuzzCandidate -o stun-candidate-fuzz.zip github.com/gortc/ice
fuzz-candidate:
	go-fuzz -bin=./stun-candidate-fuzz.zip -workdir=fuzz/stun-setters
lint:
	@echo "linting on $(PROCS) cores"
	@gometalinter \
		--enable-all \
		-e "(parse|Equal).+(gocyclo)" \
		-e "_test.go.+(gocyclo|errcheck|dupl)" \
		-e "cmd\/" \
		-e "integration-test\/.+(gocyclo|errcheck|dupl)" \
		--enable="lll" --line-length=100 \
		--disable="gochecknoglobals" \
		--disable="gochecknoinits" \
		--disable="maligned" \
		--deadline=300s \
		-j $(PROCS)
	@echo "ok"
escape:
	@echo "Not escapes, except autogenerated:"
	@go build -gcflags '-m -l' 2>&1 \
	| grep -v "<autogenerated>" \
	| grep escapes
format:
	goimports -w .
install:
	go get -u github.com/alecthomas/gometalinter
	gometalinter --install --update
	go get -u github.com/dvyukov/go-fuzz/go-fuzz-build
	go get github.com/dvyukov/go-fuzz/go-fuzz
test-integration:
	@cd integration-test && bash ./test.sh
prepush: test lint test-integration
check-api:
	api -c api/ice1.txt github.com/gortc/ice
